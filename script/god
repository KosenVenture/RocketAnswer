#!/usr/local/rbenv/shims/ruby

### BEGIN INIT INFO
# Provides: god
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the god daemon
# Description:       starts god using start-stop-daemon

### END INIT INFO
# see http://refspecs.freestandards.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html

DESC="god"
NAME="god"
DAEMON="/usr/local/rbenv/shims/#{NAME}"
CONFIGFILE="/etc/god.conf"
PIDFILE="/var/run/#{NAME}.pid"
SCRIPTNAME="/etc/init.d/#{NAME}"
START_FLAGS="-P #{PIDFILE}"

def read_pid
  begin
    @pid = File.read(PIDFILE).to_i
    @pid = nil if @pid == 0
  rescue
    @pid = nil
  end
end

def kill(code)
  Process.kill(code, @pid)
  true
rescue
  false
end

def running?
  @pid && kill(0)
end

def dead?
  @pid && !kill(0)
end

def start
  if running?
    puts "already running (#{@pid})"
    exit
  end

  if dead?
    clean_pid
  end

  puts "starting #{NAME}"
  system("#{DAEMON} -c #{CONFIGFILE} #{START_FLAGS}")
end

def stop
  if not running?
    puts "not running"
    exit
  end
  system("god quit")
end

def restart
  if running?
    stop
    read_pid
  end
  start
end

def force_reload
  if running?
    restart
  end
end

def clean_pid
  File.delete(PIDFILE)
end

read_pid
case ARGV[0]
when 'start'
  start
when 'stop'
  stop
when 'restart'
  if not running?
    start
  else
    restart
  end
when 'force-reload'
  force_reload
when 'status'
  if running?
    puts "running (#{@pid})"
  elsif dead?
    puts "dead (#{@pid})"
    exit!(1)
  else
    puts "not running"
    exit!(3)
  end
else
  puts "Usage: #{SCRIPTNAME} start|stop|restart|force-reload|status"
end

exit
